{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport removeKeys from './removeKeys';\r\nimport key from './uid';\r\nconst blackListProps = ['rowGap', 'columnWidth'];\r\nconst removeBlackListed = removeKeys(blackListProps);\r\nclass Snuggle extends React.PureComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.reposition = false;\r\n        this.elements = [];\r\n        this.grid = null;\r\n        this.getRef = (ref) => {\r\n            if (ref && ref.firstElementChild) {\r\n                this.elements.push(ref);\r\n            }\r\n        };\r\n        this.setValues = () => {\r\n            const { rowGap = 0 } = this.props;\r\n            if (this.elements.length === 0) {\r\n                return null;\r\n            }\r\n            this.elements.forEach((item) => {\r\n                const itemRef = item;\r\n                if (itemRef && itemRef.firstElementChild) {\r\n                    const firstElement = itemRef.firstElementChild;\r\n                    const itemHeight = firstElement.getBoundingClientRect().height;\r\n                    const rowSpan = Math.ceil((itemHeight + rowGap) / rowGap);\r\n                    itemRef.style.gridRowEnd = `span ${rowSpan}`;\r\n                }\r\n                return null;\r\n            });\r\n            if (!this.reposition) {\r\n                window.requestAnimationFrame(this.setValues);\r\n                this.reposition = true;\r\n            }\r\n        };\r\n        this.onLoadImages = () => {\r\n            if (this.grid) {\r\n                const images = this.grid.getElementsByTagName('img');\r\n                Array.from(images).forEach((img) => {\r\n                    const imageRef = img;\r\n                    imageRef.onload = () => {\r\n                        this.setValues();\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        this.createGridStyle = () => {\r\n            const { rowGap = 0, columnWidth = 0 } = this.props;\r\n            return {\r\n                display: 'grid',\r\n                gridGap: `${rowGap}px`,\r\n                gridTemplateColumns: `repeat(auto-fill, minmax(${columnWidth}px, 1fr))`,\r\n            };\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setValues();\r\n        this.onLoadImages();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setValues();\r\n    }\r\n    render() {\r\n        const _a = this.props, { children, item = React.createElement('div'), container = React.createElement('div') } = _a, compProps = tslib_1.__rest(_a, [\"children\", \"item\", \"container\"]);\r\n        const hasChildren = React.Children.count(children) > 0;\r\n        if (!hasChildren) {\r\n            return null;\r\n        }\r\n        const refItem = (n) => {\r\n            this.getRef(n);\r\n        };\r\n        const refGrid = (n) => {\r\n            this.grid = n;\r\n        };\r\n        const renderChildren = React.Children.map(children, (child) => {\r\n            const itemProps = removeBlackListed(Object.assign({}, item.props, { key: key(), ref: refItem }));\r\n            if (item) {\r\n                return React.createElement(item.type, itemProps, child);\r\n            }\r\n            return null;\r\n        });\r\n        const containerProps = removeBlackListed(Object.assign({}, container.props, compProps, { ref: refGrid, style: Object.assign({}, container.props.style, this.createGridStyle()) }));\r\n        return React.createElement(container.type, containerProps, renderChildren);\r\n    }\r\n}\r\nSnuggle.defaultProps = {\r\n    columnWidth: 250,\r\n    container: React.createElement('div'),\r\n    item: React.createElement('div'),\r\n    rowGap: 20,\r\n};\r\nexport default Snuggle;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/danilowoznica/Projects/significa/react-snuggle/index.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\ninterface ISnuggle {\r\n    columnWidth?: number;\r\n    container?: React.ReactElement<any>;\r\n    item?: React.ReactElement<any>;\r\n    rowGap?: number;\r\n}\r\ndeclare class Snuggle extends React.PureComponent<ISnuggle> {\r\n    static defaultProps: {\r\n        columnWidth: number;\r\n        container: React.DetailedReactHTMLElement<{}, HTMLElement>;\r\n        item: React.DetailedReactHTMLElement<{}, HTMLElement>;\r\n        rowGap: number;\r\n    };\r\n    reposition: boolean;\r\n    elements: HTMLElement[];\r\n    grid: null | HTMLElement;\r\n    componentDidMount(): void;\r\n    componentDidUpdate(): void;\r\n    getRef: (ref: HTMLElement) => void;\r\n    setValues: () => null;\r\n    onLoadImages: () => void;\r\n    createGridStyle: () => {\r\n        display: string;\r\n        gridGap: string;\r\n        gridTemplateColumns: string;\r\n    };\r\n    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;\r\n}\r\nexport default Snuggle;\r\n"}}
